/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.carmelitascoffee.vista.ventas;

import com.carmelitascoffee.controlador.ventas.COrdenVista;
import com.carmelitascoffee.pojo.DetalleOrdenProducto;
import com.carmelitascoffee.pojo.DetalleOrdenServicio;
import com.carmelitascoffee.pojo.Orden;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;

/**
 *
 * @author admin
 */
public class OrdenVista extends JInternalFrame implements ActionListener {

    /**
     * Creates new form InternalFrameZ
     */
    private COrdenVista controlador;
    private Session s;

    public OrdenVista() {
        initComponents();
    }

    public OrdenVista(Session s) {
        this.s = s;
        controlador = new COrdenVista(s);
        initComponents();
        CargarOrdenes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PANEL_main = new swing.Contenedores.PanelZ();
        PANEL_ordenes = new swing.Contenedores.PanelZ();
        jScrollPane1 = new javax.swing.JScrollPane();
        TABLE_ordenes = new swing.Controles.TableZ();
        PANEL_detallesdeorden = new swing.Contenedores.PanelZ();
        jScrollPane2 = new javax.swing.JScrollPane();
        TABLE_ordenproducto = new swing.Controles.TableZ();
        jScrollPane3 = new javax.swing.JScrollPane();
        TABLE_ordenservicio = new swing.Controles.TableZ();
        PANEL_imagen = new swing.Contenedores.PanelZ();
        LABEL_imagen = new swing.Controles.LabelZ();

        setBackground(new java.awt.Color(0, 51, 102));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Vista de ordenes");
        setMinimumSize(new java.awt.Dimension(725, 562));
        setName("AgregarEmpleadoFRM"); // NOI18N
        setPreferredSize(new java.awt.Dimension(725, 562));
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        PANEL_main.setLayout(new java.awt.GridBagLayout());

        PANEL_ordenes.setBorder(javax.swing.BorderFactory.createTitledBorder("Ordenes"));

        TABLE_ordenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Empleado", "Cliente", "Factura", "Fecha", "Subtotal", "IVA", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABLE_ordenes.getTableHeader().setReorderingAllowed(false);
        TABLE_ordenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TABLE_ordenesMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TABLE_ordenes);

        PANEL_ordenes.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        PANEL_main.add(PANEL_ordenes, gridBagConstraints);

        PANEL_detallesdeorden.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles de orden"));
        PANEL_detallesdeorden.setLayout(new javax.swing.BoxLayout(PANEL_detallesdeorden, javax.swing.BoxLayout.LINE_AXIS));

        TABLE_ordenproducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Precio", "Cantidad", "Descuento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABLE_ordenproducto.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TABLE_ordenproducto);

        PANEL_detallesdeorden.add(jScrollPane2);

        TABLE_ordenservicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Servicio", "Precio", "Cantidad", "Descuento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABLE_ordenservicio.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(TABLE_ordenservicio);

        PANEL_detallesdeorden.add(jScrollPane3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        PANEL_main.add(PANEL_detallesdeorden, gridBagConstraints);

        getContentPane().add(PANEL_main, java.awt.BorderLayout.CENTER);

        LABEL_imagen.setBackground(new java.awt.Color(0, 0, 51));
        LABEL_imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/carmelitascoffee/img/ordenes.png")));
        LABEL_imagen.setText("");
        PANEL_imagen.add(LABEL_imagen, java.awt.BorderLayout.CENTER);

        getContentPane().add(PANEL_imagen, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

    }//GEN-LAST:event_formInternalFrameOpened

    private void TABLE_ordenesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABLE_ordenesMouseReleased
        if (this.TABLE_ordenes.getSelectedRowCount() > 0) {
            DefaultTableModel modelo = (DefaultTableModel) TABLE_ordenes.getModel();
            int fila = TABLE_ordenes.getSelectedRow();
            String numeroFactura = modelo.getValueAt(fila, 2).toString();
            CargarOrdenProducto(numeroFactura);
            CargarOrdenServicio(numeroFactura);
        }
    }//GEN-LAST:event_TABLE_ordenesMouseReleased

    void CargarOrdenProducto(String numeroFactura) {
        try {
            DefaultTableModel dtm = (DefaultTableModel) TABLE_ordenproducto.getModel();
            dtm.setRowCount(0);
            List op = controlador.MostrarOrdenProducto(numeroFactura);
            if (op.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No hay productos en esta orden.");
            }
            for (Object data : op) {
                DetalleOrdenProducto ordenProducto = (DetalleOrdenProducto) data;
                Object[] fila = new Object[4];
                fila[0] = ordenProducto.getProducto().getDescripcion();
                fila[1] = ordenProducto.getPrecioUnit().doubleValue();
                fila[2] = ordenProducto.getCantidad();
                fila[3] = ordenProducto.getDescuento();
                dtm.addRow(fila);
            }
            TABLE_ordenproducto.setModel(dtm);
        } catch (HeadlessException e) {
        }
    }

    void CargarOrdenServicio(String numeroFactura) {
        try {
            DefaultTableModel dtm = (DefaultTableModel) TABLE_ordenservicio.getModel();
            dtm.setRowCount(0);
            List os = controlador.MostrarOrdenServicio(numeroFactura);
            if (os.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No hay servicios en esta orden.");
            }
            for (Object data : os) {
                DetalleOrdenServicio ordenServicio = (DetalleOrdenServicio) data;
                Object[] fila = new Object[4];
                fila[0] = ordenServicio.getServicio().getDescripcion();
                fila[1] = ordenServicio.getPrecioUnit().doubleValue();
                fila[2] = ordenServicio.getCantidad();
                fila[3] = ordenServicio.getDescuento();
                dtm.addRow(fila);
            }
            TABLE_ordenservicio.setModel(dtm);
        } catch (HeadlessException e) {
        }
    }

    void CargarOrdenes() {
        DefaultTableModel model = (DefaultTableModel) TABLE_ordenes.getModel();
        model.setRowCount(0);
        List ordenes = controlador.MostrarOrdenes();
        for (Object orden : ordenes) {
            Orden dato = (Orden) orden;
            Object[] fila = new Object[7];
            fila[0] = dato.getEmpleado().getCedulaIdentidad();
            fila[1] = dato.getCliente().getNombres() + " " + dato.getCliente().getApellidos();
            fila[2] = dato.getNumeroFactura();
            fila[3] = dato.getFechaOrden().toString();
            fila[4] = dato.getSubTotal();
            fila[5] = dato.getIva();
            fila[6] = dato.getTotal();
            model.addRow(fila);
        }
        TABLE_ordenes.setModel(model);
        if (ordenes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sin registros!");
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.Controles.LabelZ LABEL_imagen;
    private swing.Contenedores.PanelZ PANEL_detallesdeorden;
    private swing.Contenedores.PanelZ PANEL_imagen;
    private swing.Contenedores.PanelZ PANEL_main;
    private swing.Contenedores.PanelZ PANEL_ordenes;
    private swing.Controles.TableZ TABLE_ordenes;
    private swing.Controles.TableZ TABLE_ordenproducto;
    private swing.Controles.TableZ TABLE_ordenservicio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables

    private void ActualizarPanel() {
        this.PANEL_main.revalidate();
        this.PANEL_main.repaint();
    }

    @Override
    public void actionPerformed(ActionEvent ae) {

    }

}
