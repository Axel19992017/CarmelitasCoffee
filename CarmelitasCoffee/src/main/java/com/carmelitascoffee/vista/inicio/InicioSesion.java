/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.carmelitascoffee.vista.inicio;

import com.carmelitascoffee.controlador.inicio.CInicioSesion;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.hibernate.Session;

/**
 *
 * @author darce
 */
public class InicioSesion extends JFrame {

    private String title = "";
    int x = 0, y = 0;
    private CInicioSesion controlador;
    private Session s;

    public InicioSesion() {
        initComponents();
        recordarLogin();
        controlador = new CInicioSesion(s);
    }

    public InicioSesion(String title, Session s) {
        this.title = title;
        this.s = s;
        initComponents();
        recordarLogin();
        controlador = new CInicioSesion(s);
    }

    @Override
    public String getTitle() {
        return title;
    }

    @Override
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Creates new form FrameZ
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pToolBar = new javax.swing.JPanel();
        lTitle = new javax.swing.JLabel();
        bCerrar = new javax.swing.JButton();
        bMinimizar = new javax.swing.JButton();
        pContent = new javax.swing.JPanel();
        labelZ1 = new swing.Controles.LabelZ();
        labelZ2 = new swing.Controles.LabelZ();
        tfUsuario = new swing.Controles.TextFieldZ();
        pfClave = new swing.Controles.PasswordFieldZ();
        bIniciarSesion = new swing.Controles.ButtonZ();
        cbRecuerdame = new swing.Controles.CheckBoxZ();

        setBackground(new java.awt.Color(97, 53, 1));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pToolBar.setBackground(new java.awt.Color(178, 122, 57));
        pToolBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pToolBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pToolBarMouseDragged(evt);
            }
        });
        pToolBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pToolBarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pToolBarMousePressed(evt);
            }
        });
        pToolBar.setLayout(new java.awt.GridBagLayout());

        lTitle.setBackground(new java.awt.Color(178, 122, 57));
        lTitle.setForeground(new java.awt.Color(255, 255, 255));
        lTitle.setText("Texto");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        pToolBar.add(lTitle, gridBagConstraints);

        bCerrar.setBackground(new java.awt.Color(178, 122, 57));
        bCerrar.setToolTipText("");
        bCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bCerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bCerrarMouseExited(evt);
            }
        });
        bCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCerrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pToolBar.add(bCerrar, gridBagConstraints);

        bMinimizar.setBackground(new java.awt.Color(178, 122, 57));
        bMinimizar.setToolTipText("");
        bMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bMinimizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bMinimizarMouseExited(evt);
            }
        });
        bMinimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bMinimizarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        pToolBar.add(bMinimizar, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(pToolBar, gridBagConstraints);

        pContent.setBackground(new java.awt.Color(255, 247, 162));
        pContent.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pContent.setLayout(new java.awt.GridBagLayout());

        labelZ1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelZ1.setText("Nombre de usuario:");
        labelZ1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pContent.add(labelZ1, gridBagConstraints);

        labelZ2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelZ2.setText("Contrase√±a:");
        labelZ2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pContent.add(labelZ2, gridBagConstraints);

        tfUsuario.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(28, 40, 51)));
        tfUsuario.setForeground(new java.awt.Color(28, 40, 51));
        tfUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfUsuario.setText("");
        tfUsuario.setCaretColor(new java.awt.Color(255, 255, 255));
        tfUsuario.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tfUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfUsuarioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfUsuarioFocusLost(evt);
            }
        });
        tfUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUsuarioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.9;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pContent.add(tfUsuario, gridBagConstraints);

        pfClave.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(28, 40, 51)));
        pfClave.setForeground(new java.awt.Color(28, 40, 51));
        pfClave.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pfClave.setText("");
        pfClave.setCaretColor(new java.awt.Color(255, 255, 255));
        pfClave.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pfClave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pfClaveKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.9;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pContent.add(pfClave, gridBagConstraints);

        bIniciarSesion.setText("Iniciar");
        bIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bIniciarSesionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pContent.add(bIniciarSesion, gridBagConstraints);

        cbRecuerdame.setText("Recuerd√°me");
        cbRecuerdame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRecuerdameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.9;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pContent.add(cbRecuerdame, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.6;
        getContentPane().add(pContent, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void bCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCerrarMouseExited
        bCerrar.setBackground(new Color(178, 122, 57));
    }//GEN-LAST:event_bCerrarMouseExited

    private void bCerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCerrarMouseEntered
        //[0,153,255]
        bCerrar.setBackground(new Color(215, 163, 100));
    }//GEN-LAST:event_bCerrarMouseEntered

    private void bCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bCerrarActionPerformed

    private void bMinimizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bMinimizarMouseEntered
        bMinimizar.setBackground(new Color(215, 163, 100));
    }//GEN-LAST:event_bMinimizarMouseEntered

    private void bMinimizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bMinimizarMouseExited
        bMinimizar.setBackground(new Color(178, 122, 57));
    }//GEN-LAST:event_bMinimizarMouseExited

    private void bMinimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bMinimizarActionPerformed
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_bMinimizarActionPerformed

    private void pToolBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pToolBarMouseDragged
        Point point = MouseInfo.getPointerInfo().getLocation();
        setLocation(point.x - x, point.y - y);
    }//GEN-LAST:event_pToolBarMouseDragged

    private void pToolBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pToolBarMousePressed

        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_pToolBarMousePressed

    private void pToolBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pToolBarMouseClicked
        if (evt.getClickCount() == 2) {
            restaurarVentana();
        }
    }//GEN-LAST:event_pToolBarMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        getContentPane().setBackground(new Color(0, 0, 204));
        //creando iconos 
        ImageIcon iconoCerrar, iconoMinimizar;
        URL ruta = getClass().getClassLoader().getResource("com//carmelitascoffee//img//close.png");
        iconoCerrar = new ImageIcon(new ImageIcon(ruta).getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        bCerrar.setIcon(iconoCerrar);
        ruta = getClass().getClassLoader().getResource("com//carmelitascoffee//img//minimize.png");
        iconoMinimizar = new ImageIcon(new ImageIcon(ruta).getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        bMinimizar.setIcon(iconoMinimizar);
        //escribiendo t√≠tulo
        if ("".equals(title)) {
            title = "Nueva Ventana";
        }
        lTitle.setText(title);
        ruta = getClass().getClassLoader().getResource("com//carmelitascoffee//img//user.jpg");
        this.setIconImage(new ImageIcon(ruta).getImage());
        lTitle.setIcon(new ImageIcon(new ImageIcon(ruta).getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT)));

    }//GEN-LAST:event_formWindowOpened

    private void tfUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUsuarioActionPerformed

    }//GEN-LAST:event_tfUsuarioActionPerformed

    private void bIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bIniciarSesionActionPerformed
        if (cbRecuerdame.isSelected()) {
            try {
                PrintWriter writer = new PrintWriter("login.txt", "UTF-8");
                writer.println(tfUsuario.getText());
                writer.println(new String(pfClave.getPassword()));
                writer.close();
            } catch (FileNotFoundException | UnsupportedEncodingException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
        if (controlador.validarUsuario(tfUsuario.getText(), new String(pfClave.getPassword()))) {
            iniciarAplicacion(controlador.getRol(tfUsuario.getText()), controlador.getIdUsuario(tfUsuario.getText()));
        } else {
            JOptionPane.showMessageDialog(this, "Contrase√±a o Usuario incorrecto");
        }
    }//GEN-LAST:event_bIniciarSesionActionPerformed

    private void pfClaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pfClaveKeyPressed
        if (KeyEvent.VK_ENTER == evt.getKeyCode()) {
            if (controlador.validarUsuario(tfUsuario.getText(), new String(pfClave.getPassword()))) {
                iniciarAplicacion(controlador.getRol(tfUsuario.getText()), controlador.getIdUsuario(tfUsuario.getText()));
            } else {
                JOptionPane.showMessageDialog(this, "Contrase√±a o Usuario incorrecto");
            }
        }
    }//GEN-LAST:event_pfClaveKeyPressed

    private void tfUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfUsuarioFocusGained

    }//GEN-LAST:event_tfUsuarioFocusGained

    private void tfUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfUsuarioFocusLost

    }//GEN-LAST:event_tfUsuarioFocusLost

    private void cbRecuerdameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRecuerdameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRecuerdameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCerrar;
    private swing.Controles.ButtonZ bIniciarSesion;
    private javax.swing.JButton bMinimizar;
    private swing.Controles.CheckBoxZ cbRecuerdame;
    private javax.swing.JLabel lTitle;
    private swing.Controles.LabelZ labelZ1;
    private swing.Controles.LabelZ labelZ2;
    private javax.swing.JPanel pContent;
    private javax.swing.JPanel pToolBar;
    private swing.Controles.PasswordFieldZ pfClave;
    private swing.Controles.TextFieldZ tfUsuario;
    // End of variables declaration//GEN-END:variables

    private void restaurarVentana() {
        if (getExtendedState() == MAXIMIZED_BOTH) {
            this.setExtendedState(NORMAL);
        } else {
            this.setExtendedState(MAXIMIZED_BOTH);
        }
    }

    private void iniciarAplicacion(String rol, int idEmpleado) {
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        int frameWidth = 1000;
        int frameHeight = 700;

        Escritorio frameZ = new Escritorio("Carmelitas Coffeee", rol, idEmpleado, s);
        Point initialLocation = new Point((int) toolkit.getScreenSize().getWidth() / 2 - frameWidth / 2,
                (int) toolkit.getScreenSize().getHeight() / 2 - frameHeight / 2);
        Dimension initialDimension = new Dimension(frameWidth, frameHeight);
        FullResizibleFrame fullResizibleFrame;
        fullResizibleFrame = new FullResizibleFrame(initialDimension, initialLocation, frameZ);
        this.setVisible(false);
        frameZ.setVisible(true);
    }

    private void recordarLogin() {
        try {
            FileReader f = new FileReader("login.txt");
            BufferedReader b = new BufferedReader(f);
            tfUsuario.setText(b.readLine());
            pfClave.setText(b.readLine());
            cbRecuerdame.setSelected(true);
            
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (IOException ex) {
            Logger.getLogger(InicioSesion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
